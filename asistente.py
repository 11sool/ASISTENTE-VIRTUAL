import pyttsx3
# import speech_recognition as sr  # ‚Üê COMENTAMOS ESTA L√çNEA
import pywhatkit
import yfinance as yf
import pyjokes
import webbrowser
import datetime
import wikipedia
import time

# Opciones de voz / idioma (CORREGIDO)
id1 = r"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens\TTS_MS_EN-US_DAVID_11.0"
id2 = r"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens\TTS_MS_EN-US_ZIRA_11.0"
id3 = r"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens\TTS_MS_ES-ES_HELENA_11.0"


# üÜï NUEVA FUNCI√ìN: Para escribir comandos en lugar de hablarlos
def obtener_texto_usuario():
    """
    En lugar de escuchar el micr√≥fono, el usuario escribir√° los comandos
    """
    try:
        # El usuario escribe el comando
        pedido = input("¬øQu√© necesitas? (escribe tu comando): ")
        print(f"Escribiste: {pedido}")
        return pedido
    except:
        print("Error al leer el texto")
        return "Sigo esperando"


# Funci√≥n para que el asistente pueda ser escuchado (IGUAL QUE ANTES)
def hablar(mensaje):
    try:
        engine = pyttsx3.init()
        engine.setProperty("voice", id3)
        engine.say(mensaje)
        engine.runAndWait()
        print(f"üîä Asistente dice: {mensaje}")  # Tambi√©n lo mostramos en pantalla
    except:
        # Si no funciona la voz, al menos mostramos el texto
        print(f"üîä Asistente dice: {mensaje}")


# ========================================
# üÜï FUNCI√ìN: EJERCICIO DE RESPIRACI√ìN
# ========================================

def ejercicio_respiracion():
    """
    Esta funci√≥n gu√≠a al usuario en un ejercicio de respiraci√≥n relajante.
    Usa la t√©cnica 4-4-4: inhalar 4 segundos, mantener 4 segundos, exhalar 4 segundos
    """

    # 1Ô∏è‚É£ SALUDO INICIAL
    hablar("Perfecto, vamos a hacer un ejercicio de respiraci√≥n juntos para relajarnos.")

    # 2Ô∏è‚É£ INSTRUCCIONES
    hablar("Ponte c√≥modo, puedes sentarte o estar de pie. Si quieres, cierra los ojos.")

    # 3Ô∏è‚É£ PAUSA
    print("‚è∞ Prepar√°ndote... (3 segundos)")
    time.sleep(3)

    # 4Ô∏è‚É£ COMENZAMOS
    hablar("Comenzamos. Haremos 3 respiraciones profundas.")

    # 5Ô∏è‚É£ BUCLE PARA 3 RESPIRACIONES
    for numero_respiracion in range(1, 4):

        hablar(f"Respiraci√≥n n√∫mero {numero_respiracion}")
        time.sleep(1)

        # INHALAR
        hablar("Inhala profundamente por la nariz")
        print("üí® Inhalando... (4 segundos)")
        time.sleep(4)

        # MANTENER
        hablar("Mant√©n el aire en tus pulmones")
        print("‚è∏Ô∏è Manteniendo... (4 segundos)")
        time.sleep(4)

        # EXHALAR
        hablar("Ahora exhala lentamente por la boca")
        print("üí® Exhalando... (4 segundos)")
        time.sleep(4)

        # PAUSA ENTRE RESPIRACIONES
        if numero_respiracion < 3:
            print("‚è∞ Pausa... (2 segundos)")
            time.sleep(2)

    # 6Ô∏è‚É£ MENSAJE FINAL
    hablar("Excelente. Has completado el ejercicio de respiraci√≥n. Espero que te sientas m√°s relajado.")


# ========================================
# FUNCIONES ORIGINALES (SIN CAMBIOS)
# ========================================

def pedir_dia():
    dia = datetime.datetime.today()
    dia_semana = dia.weekday()
    calendario = {0: "Lunes", 1: "Martes", 2: "Mi√©rcoles", 3: "Jueves",
                  4: "Viernes", 5: "S√°bado", 6: "Domingo"}
    hablar(f"Hoy es {calendario[dia_semana]}")


def pedir_hora():
    hora = datetime.datetime.now()
    hora_texto = f"En este momento son las {hora.hour} horas con {hora.minute} minutos y {hora.second} segundos"
    hablar(hora_texto)


def saludo_inicial():
    hora = datetime.datetime.now()
    if hora.hour < 6 or hora.hour > 20:
        momento = "Buenas noches"
    elif 6 <= hora.hour < 13:
        momento = "Buen d√≠a"
    else:
        momento = "Buenas tardes"

    hablar(f"{momento} Juan, en qu√© te puedo ayudar? Ahora tambi√©n puedo guiarte en ejercicios de respiraci√≥n.")
    print("\nüìù COMANDOS DISPONIBLES:")
    print("- 'respiraci√≥n' o 'respirar' o 'relajar' ‚Üí Ejercicio de respiraci√≥n")
    print("- 'abrir youtube' ‚Üí Abre YouTube")
    print("- 'abrir navegador' ‚Üí Abre Google")
    print("- 'qu√© d√≠a es hoy' ‚Üí Te dice el d√≠a")
    print("- 'qu√© hora es' ‚Üí Te dice la hora")
    print("- 'chiste' ‚Üí Te cuenta un chiste")
    print("- 'adi√≥s' ‚Üí Termina el programa")
    print("=" * 50)


# ========================================
# FUNCI√ìN CENTRAL MODIFICADA
# ========================================

def centro_pedido():
    saludo_inicial()
    comenzar = True

    while comenzar:
        # üîÑ CAMBIO: Usamos input() en lugar del micr√≥fono
        pedido = obtener_texto_usuario().lower()
        print(f"Comando recibido: {pedido}")

        # COMANDOS ORIGINALES
        if "abrir youtube" in pedido:
            hablar("Estoy abriendo YouTube")
            webbrowser.open("https://www.youtube.com")
            continue
        elif "abrir navegador" in pedido or "abrir el navegador" in pedido:
            hablar("Estoy abriendo el navegador")
            webbrowser.open("https://www.google.com.ar")
            continue
        elif "que d√≠a es hoy" in pedido or "qu√© d√≠a es hoy" in pedido or "qu√© d√≠a es" in pedido:
            pedir_dia()
            continue
        elif "qu√© hora es" in pedido or "que hora es" in pedido or "qu√© hora" in pedido:
            pedir_hora()
            continue
        elif "busca en wikipedia" in pedido:
            hablar("buscando en wikipedia")
            pedido = pedido.replace("busca en wikipedia", "")
            wikipedia.set_lang("es")
            try:
                resultado = wikipedia.summary(pedido, sentences=1)
                hablar("Encontr√© esta informaci√≥n en wikipedia")
                hablar(resultado)
            except:
                hablar("No pude encontrar informaci√≥n sobre ese tema")
            continue
        elif "busca en internet" in pedido:
            hablar("Buscando informaci√≥n")
            pedido = pedido.replace("busca en internet", "")
            pywhatkit.search(pedido)
            hablar("Esto es lo que he encontrado")
            continue
        elif "reproducir" in pedido:
            hablar("Reproduciendo")
            pedido = pedido.replace("reproducir", "").strip()
            pywhatkit.playonyt(pedido)
            continue
        elif "chiste" in pedido:
            hablar(pyjokes.get_joke("es"))
            continue
        elif "precio de la acci√≥n" in pedido:
            accion = pedido.split("de")[-1].strip().lower()
            cartera = {"apple": "AAPL", "amazon": "AMZN", "google": "GOOGL", "tesla": "TSLA"}
            try:
                accion_buscada = cartera[accion]
                ticker = yf.Ticker(accion_buscada)
                precio_actual = ticker.info['regularMarketPrice']
                hablar(f"La encontr√©, el precio de {accion} es {precio_actual} d√≥lares.")
            except KeyError:
                hablar(f"No tengo informaci√≥n sobre la acci√≥n de {accion}.")
            except Exception as e:
                hablar("Perd√≥n, pero no pude encontrar la informaci√≥n de la acci√≥n.")
            continue

        # üÜï NUEVO COMANDO: EJERCICIO DE RESPIRACI√ìN
        elif "respiraci√≥n" in pedido or "respirar" in pedido or "relajar" in pedido:
            ejercicio_respiracion()
            continue

        elif "adi√≥s" in pedido:
            hablar("Nos vemos, av√≠same si necesitas otra cosa Juan")
            break
        elif "sigo esperando" not in pedido:
            hablar(
                "No entend√≠ ese comando. Puedes escribir 'respiraci√≥n' para el ejercicio de respiraci√≥n, o 'adi√≥s' para salir.")
            continue


# Ejecutar el programa
if __name__ == "__main__":
    print("=== ASISTENTE VIRTUAL DE BIENESTAR MENTAL ===")
    print("MODO: Solo texto (sin micr√≥fono)")
    print("Escribe tus comandos en lugar de hablarlos")
    print("=" * 45)
    centro_pedido()